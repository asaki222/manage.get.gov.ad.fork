name: Clone Test Database
run-name: Create test database to ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
      inputs:
        environment:
          description: 'Environment to deploy'
          required: true
          type: 'choice'
          options:
            - aa
            - acadia
            - ad
            - backup
            - bob
            - dg
            - el
            - es
            - glacier
            - hotgov
            - kma
            - litterbox
            - meoward
            - nl
            - olympic
            - potato
            - product
            - rh
            - yellowstone
            - zion
jobs:
  clone-test-database:
    runs-on: ubuntu-24.04
    env:
      # must be the github secrets for the receiving sandbox
      CF_ACADIA_USERNAME: ${{ secrets.CF_ACADIA_USERNAME }}
      CF_ACADIA_PASSWORD: ${{ secrets.CF_ACADIA_PASSWORD }}
      CF_AD_USERNAME: ${{ secrets.CF_AD_USERNAME }}
      CF_AD_PASSWORD: ${{ secrets.CF_AD_PASSWORD }}
      CF_RH_USERNAME: ${{ secrets.CF_RH_USERNAME }}
      CF_RH_PASSWORD: ${{ secrets.CF_RH_PASSWORD }}
      CF_ZION_USERNAME: ${{ secrets.CF_ZION_USERNAME }}
      CF_ZION_PASSWORD: ${{ secrets.CF_ZION_PASSWORD }}
      DESTINATION_ENVIRONMENT: ${{ github.event.inputs.environment}}
      SOURCE_ENVIRONMENT: testdb
    steps:
        - name: Clone Test Database
          run: |
            # Convert environment to uppercase for variable construction
            env_upper=$(echo "$DESTINATION_ENVIRONMENT" | tr '[:lower:]' '[:upper:]') 
            username_var = "CF_${env_upper}_USERNAME"
            password_var = "CF_${env_upper}_PASSWORD"

            CF_USERNAME = "${!username_var}"
            CF_PASSWORD = "${!password_var}"
            echo "CF USERNAME length is (length: ${#CF_USERNAME})"
            echo "CF PASSWORD length is (length: ${#CF_PASSWORD})"
        
        - name: Load Fixtures
          uses: cloud-gov/cg-cli-tools@main
          with:
            cf_username: CF_${{ github.event.inputs.environment }}_USERNAME
            cf_password: CF_${{ github.event.inputs.environment }}_PASSWORD
            cf_org: cisa-dotgov
            cf_space: ${{ env.DESTINATION_ENVIRONMENT }}
            cf_command: "run-task getgov-testdb --command 'python manage.py load' --name fixtures"

        - name: Cleanup
          if: always()
          run: cf unshare-service getgov-$DESTINATION_ENVIRONMENT-database -s $SOURCE_ENVIRONMENT -f
